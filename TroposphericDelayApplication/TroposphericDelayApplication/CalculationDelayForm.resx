<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="DelayTextBox.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BackTile.TileImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>